lines(xfit, yfit, col = "black", lwd = 2, ylim=c(0,0.5))
g <- rstudent(autism.lm2)
h <- hist(g,
col = "lightgray", xlab = "Studentized Residuals", main = "Distribution",
ylim = c(0, 2))
xfit <- seq(min(g), max(g), length = 40)
yfit <- dnorm(xfit)
lines(xfit, yfit, col = "black", lwd = 2, ylim=c(0,0.5))
g <- rstudent(autism.lm2)
h <- hist(g, freq = F
col = "lightgray", xlab = "Studentized Residuals", main = "Distribution",
ylim = c(0, 2))
xfit <- seq(min(g), max(g), length = 40)
yfit <- dnorm(xfit)
lines(xfit, yfit, col = "black", lwd = 2, ylim=c(0,0.5))
g <- rstudent(autism.lm2)
h <- hist(g, freq = F
col = "lightgray", xlab = "Studentized Residuals", main = "Distribution",
ylim = c(0, 2))
xfit <- seq(min(g), max(g), length = 40)
yfit <- dnorm(xfit)
lines(xfit, yfit, col = "black", lwd = 2, ylim=c(0,0.5))
g <- rstudent(autism.lm2)
h <- hist(g, freq = F
col = "lightgray", xlab = "Studentized Residuals", main = "Distribution",
ylim = c(0, 2))
xfit <- seq(min(g), max(g), length = 40)
yfit <- dnorm(xfit)
lines(xfit, yfit, col = "black", lwd = 2, ylim=c(0,0.5))
g <- rstudent(autism.lm2)
h <- hist(g, freq = F
col = "lightgray", xlab = "Studentized Residuals", main = "Distribution",
ylim = c(0, 2))
xfit <- seq(min(g), max(g), length = 40)
yfit <- dnorm(xfit)
lines(xfit, yfit, col = "black", lwd = 2, ylim=c(0,0.5))
g <- rstudent(autism.lm2)
h <- hist(g, freq = F
col = "lightgray", xlab = "Studentized Residuals", main = "Distribution",
ylim = c(0, 2))
xfit <- seq(min(g), max(g), length = 40)
yfit <- dnorm(xfit)
lines(xfit, yfit, col = "black", lwd = 2, ylim=c(0,0.5))
g <- rstudent(autism.lm2)
h <- hist(g, freq = F
col = "lightgray", xlab = "Studentized Residuals", main = "Distribution",
ylim = c(0, 2))
xfit <- seq(min(g), max(g), length = 40)
yfit <- dnorm(xfit)
lines(xfit, yfit, col = "black", lwd = 2, ylim=c(0,0.5))
g <- rstudent(autism.lm2)
h <- hist(g, freq = FALSE
col = "lightgray", xlab = "Studentized Residuals", main = "Distribution",
ylim = c(0, 2))
xfit <- seq(min(g), max(g), length = 40)
yfit <- dnorm(xfit)
lines(xfit, yfit, col = "black", lwd = 2, ylim=c(0,0.5))
g <- rstudent(autism.lm2)
h <- hist(g, freq = FALSE,
col = "lightgray", xlab = "Studentized Residuals", main = "Distribution",
ylim = c(0, 2))
xfit <- seq(min(g), max(g), length = 40)
yfit <- dnorm(xfit)
lines(xfit, yfit, col = "black", lwd = 2, ylim=c(0,0.5))
# histogram of residuals for original model
g <- rstudent(autism.lm2)
h <- hist(g,
col = "lightgray", xlab = "Studentized Residuals", main = "Distribution",
ylim = c(0, 2))
xfit <- seq(min(g), max(g), length = 40)
yfit <- dnorm(xfit)
lines(xfit, yfit, col = "black", lwd = 2, ylim=c(0,0.5))
g <- rstudent(autism.lm1)
h <- hist(g,
col = "lightgray", xlab = "Studentized Residuals", main = "Distribution",
ylim = c(0, 2))
xfit <- seq(min(g), max(g), length = 40)
yfit <- dnorm(xfit)
lines(xfit, yfit, col = "black", lwd = 2, ylim=c(0,0.5))
g <- rstudent(autism.lm2)
h <- hist(g,
col = "lightgray", xlab = "Studentized Residuals", main = "Distribution",
ylim = c(0, 2))
xfit <- seq(min(g), max(g), length = 40)
yfit <- dnorm(xfit)
lines(xfit, yfit, col = "black", lwd = 2, ylim=c(0,0.5))
hist(g)
hist(g, freq = F)
curve(dnorm, add = T)
hist(g, freq = F, col = 'lightgray')
ggplot(lm1_resid) + geom_histogram(aes("", Error))
ggplot(lm1_resid) + geom_histogram(aes(Error))
g <- rstudent(autism.lm1)
hist(g, freq = F, col = 'lightgray')
curve(dnorm, add = T, col = 'blue')
g2 = rstudent(autism.lm2)
hist(g2, freq = F, col = 'lightgray', xlab = "Studentized Residuals", main = "Distribution of Studentized Residuals")
curve(dnorm, add = T, col = 'blue')
g2 = rstudent(autism.lm2)
hist(g2, freq = F, col = 'lightgray', xlab = "Studentized Residuals", main = "Distribution of Studentized Residuals for Log-Linear Model")
curve(dnorm, add = T, col = 'blue')
ggplot(autism) + geom_point(aes(Year, Prevalence))
ggplot(autism) + geom_point(aes(Year, logPrev)) + ylab("Log of Prevalence")
ggplot(new_df2, aes(Year, logPrev))+
geom_point()+
geom_line(aes(y=lwr), color = "red", linetype = "dashed")+
geom_line(aes(y=upr), color = "red", linetype = "dashed")+
geom_smooth(method=lm, se=TRUE) +
ylab("Log of Prevalence") +
ggtitle("Confidence and Prediction Intervals for Log-Linear Model")
ggplot(new_df1, aes(Year, Prevalence))+
geom_point()+
geom_line(aes(y=lwr), color = "red", linetype = "dashed")+
geom_line(aes(y=upr), color = "red", linetype = "dashed")+
geom_smooth(method=lm, se=TRUE) +
ggtitle("Confidence and Prediction Intervals for Standard Model")
ggplot(lm2_resid) +
geom_point(aes(Actual, Error)) +
geom_hline(yintercept = 0, col = 'blue', lty='dashed') +
ggtitle("Residuals for Log-Linear Model")
ggplot(lm1_resid) +
geom_point(aes(Actual, Error)) +
geom_hline(yintercept = 0, col = 'blue', lty='dashed') +
ggtitle("Residuals for Standard Model")
dev.off()
par(mfrow = c(1,2))
ggplot(lm1_resid) +
geom_point(aes(Actual, Error)) +
geom_hline(yintercept = 0, col = 'blue', lty='dashed') +
ggtitle("Residuals for Standard Model")
ggplot(lm2_resid) +
geom_point(aes(Actual, Error)) +
geom_hline(yintercept = 0, col = 'blue', lty='dashed') +
ggtitle("Residuals for Log-Linear Model")
par(mfrow = c(1,2))
ggplot(lm2_resid) +
geom_point(aes(Actual, Error)) +
geom_hline(yintercept = 0, col = 'blue', lty='dashed') +
ggtitle("Residuals for Log-Linear Model")
par(mfrow = c(2,2))
ggplot(lm2_resid) +
geom_point(aes(Actual, Error)) +
geom_hline(yintercept = 0, col = 'blue', lty='dashed') +
ggtitle("Residuals for Log-Linear Model")
par(mfrow = c(1,1))
g2 = rstudent(autism.lm2)
hist(g2, freq = F, col = 'lightgray', xlab = "Studentized Residuals", main = "Distribution of Studentized Residuals for Log-Linear Model")
curve(dnorm, add = T, col = 'blue')
g <- rstudent(autism.lm1)
hist(g, freq = F, col = 'lightgray', xlab = "Studentized Residuals", main = "Distribution of Studentized Residuals for Standard Model")
curve(dnorm, add = T, col = 'blue')
summary(autism.lm2)
ggplot(new_df2, aes(Year, logPrev))+
geom_point()+
geom_line(aes(y=lwr), color = "red", linetype = "dashed")+
geom_line(aes(y=upr), color = "red", linetype = "dashed")+
geom_smooth(method=lm, se=TRUE) +
ylab("Log of Prevalence") +
ggtitle("Confidence and Prediction Intervals for Log-Linear Model")
ggplot(new_df2, aes(Year, logPrev))+
geom_point()+
geom_line(aes(y=lwr), color = "red", linetype = "dashed")+
geom_line(aes(y=upr), color = "red", linetype = "dashed")+
geom_smooth(method=lm, se=TRUE) +
ylab("Log of Prevalence") +
ggtitle("Confidence and Prediction Intervals for Log-Linear Model")
.205433 + c(-1, 1)*(2*.01949)
qt(.975, 3)
.205433 + c(-1, 1)*(3.182446*002481)
c(-1, 1)*(3.182446*002481)
3.182446*.002481
c(-1, 1)*(3.182446*002481)
c(-1, 1)*(3.182446 * 002481)
.205433 + c(-1, 1)*(3.182446*.002481)
2.718^c(0.1975374, 0.2133286)
-7.5+8
-7.5+8
tidyr::table4a
tidyr::table4b
tidyr::table2
first_names <- data.frame(Name = c("Jim Jones", "April Fools"))
first_names
first_names %>% separate(Name, into = c("Firstname", "lastname"))
library(stringr)
name1 = "Johnny Appleseed Jones"
str_split(name1[1])
name1 %>% word(1,-2)
which(is.na("first_names"), arr.ind = T)
which(is.na(flights_sml), arr.ind = T)
flight_missing <- which(is.na(flights_sml), arr.ind = T)
flight_missing[1]
flight_missing[, 1]
stocks
stocks <- tibble(
year   = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),
qtr    = c(   1,    2,    3,    4,    2,    3,    4),
return = c(1.88, 0.59, 0.35,   NA, 0.92, 0.17, 2.66)
)
stocks
stocks %>% spread(year)
stocks %>% spread(year, return)
stocks %>% spread(year, return, qtr)
stocks %>% spread(year, return)
?dplyr::count()
airports %>%
semi_join(flights, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point() +
coord_quickmap()
install.packages("nycflights13")
library(nycflights13)
airports %>%
semi_join(flights, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point() +
coord_quickmap()
install.packages("maps")
library(maps)
airports %>%
semi_join(flights, c("faa" = "dest")) %>%
ggplot(aes(lon, lat)) +
borders("state") +
geom_point() +
coord_quickmap()
getwd()
working_dir<- "/Users/roberthazell/Desktop/Dataquest/Chinook"
working_dir<- "/Users/roberthazell/Desktop/Dataquest/Chinook"
setwd(working_dir)
con <- DBI::dbConnect(RSQLite::SQLite(), dbname = paste(c(working_dir, "/chinook.db"), collapse = ''))
dbListTables(con)
library(purrr)
purrr::map(c(dbListTables(con)), tbl)
purrr::map(c(dbListTables(con)), tbl())
purrr::map(dbListTables(con), tbl()))
purrr::map(dbListTables(con), tbl())
dbListTables(con)
a = "apple"
a+'banana'
paste(a, "banana")
paste(a, "banana", collapse = "") <- 5
paste(a, "banana", collapse = "")
paste(c(a, "banana", collapse = ""))
paste(c(a, "banana"), collapse = "")
paste(c(a, "banana"), collapse = "") <- 5
a <- paste(c(a, "banana"), collapse = "")
a
make_data_frame <- function(tb) {
tb_name <- paste(c(tb, "_db"), collapse = "")
tb_name <- tbl(con, tb) %>% as.data.frame()
tb_name
}
make_data_frame("album")
tb_name
dbListTables(con)[1]
map(dbListTables(con), function (tb) {paste(c(tb, "_db"), collapse = "")})
class(dbListTables(con)[1])
class(dbListTables(con))
dbListTables(con)
c(dbListTables(con))
class(c(dbListTables(con)))
dbListTables(con)[4]
tb_names <- dbListTables(con)
class(tb_names)
v <- c(1,2,3)
class(v)
type(v)
is.vector(v)
is.vector(tb_names)
map(dbListTables(con), function (tb) {paste0(c(tb, "_db"), collapse = "")})
for (name in dbListTables(con)) {print(name)}
for (name in dbListTables(con)) {paste0(name, '_db')}
for (name in dbListTables(con)) {print(paste0(name, '_db'))}
for (name in dbListTables(con)) {paste(name, '_db')}
dbListTables(con)
map(dbListTables(con), function(x) {paste0(x, "_db")})
map(dbListTables(con), function(x) {print(paste0(x, "_db"))})
wage_males <- function(m) {(35.11+1.93568) + (1.23550 + .25841)*m}
wage_females <- function(f) {35.11 + (1.23550 + .25841)*f}
m <- c(0:20)
map(m, wage_m)
map(m, wage_males)
apply(m, wage_males)
apply(m, FUN = wage_males)
plot.function(wage_males, n=30)
plot.function(wage_males, n=30)
plot.function(wage_males, from = 0, to = 10)
plot.function(wage_females, from = 0, to = 30)
plot.function(wage_females, from = 0, to = 10)
map_dbl(m, wage_males)
wage_data = data.frame(Year_Exp = c(0:20), Males = map_dbl(Years_Exp, wage_m))
wage_data = data.frame(Year_Exp = c(0:20), Males = map_dbl(Years_Exp, wage_males))
years_exp = c(0:20)
wage_data = data.frame(Year_Exp = years_exp, Males = map_dbl(years_Exp, wage_males), Females = map_dbl(years_exp, wage_females))
wage_data = data.frame(Year_Exp = years_exp, Males = map_dbl(years_exp, wage_males), Females = map_dbl(years_exp, wage_females))
wage_data
ggplot(wage_data) + geom_line(aes(Year_Exp, Males))
ggplot(wage_data) + geom_line(aes(Year_Exp, Males)) + geom_line(aes(Year_Exp, Females))
ggplot(wage_data) + geom_line(aes(Year_Exp, Males), col = 'blue') + geom_line(aes(Year_Exp, Females))
ggplot(wage_data) + geom_line(aes(Year_Exp, Males), col = 'blue') + geom_line(aes(Year_Exp, Females)) + geom_label()
ggplot(wage_data) + geom_line(aes(Year_Exp, Males), col = 'blue') + geom_line(aes(Year_Exp, Females)) + theme(plot.caption = T)
ggplot(wage_data) + geom_line(aes(Year_Exp, Males), col = 'blue') + geom_line(aes(Year_Exp, Females)) + theme(legend.position = "right")
wage_data %>% gather(Males, Females, key = Gender, value = Salary)
wd <- wage_data %>% gather(Males, Females, key = Gender, value = Salary)
ggplot(wd, aes(Year_Exp, Salary), fill = Gender) + geom_line()
ggplot(wd) + geom_line(aes(Year_Exp, Salary))
ggplot(wd) + geom_line(aes(Year_Exp, Salary, fill = Gender))
ggplot(wd) + geom_line(aes(Year_Exp, Salary))
ggplot(wd) + geom_line(aes(Year_Exp, Salary, color = Gender))
library(ggplot2)
library(purrr)
library(tidyr)
library(magrittr)
# define range for X2
years_exp = c(0:20)
# regression line for males
wage_males <- function(m) {(35.11+1.93568) + (1.23550 + .25841)*m}
# regression line for females
wage_females <- function(f) {35.11 + (1.23550 + .25841)*f}
# data frame containing these values
wage_data = data.frame(Year_Exp = years_exp,
Males = map_dbl(years_exp, wage_males),
Females = map_dbl(years_exp, wage_females))
# make one column for gender
wage_data %<>% gather(Males, Females, key = Gender, value = Salary)
# plot
ggplot(wage_data) + geom_line(aes(Year_Exp, Salary, color = Gender))
library(ggplot2)
library(purrr)
library(tidyr)
library(magrittr)
# define range for X2
years_exp = c(0:20)
# regression line for males
wage_males <- function(m) {(35.11+1.93568) + (1.23550 + .25841)*m}
# regression line for females
wage_females <- function(f) {35.11 + (1.23550 + .25841)*f}
# data frame containing these values
wage_data = data.frame(Year_Exp = years_exp,
Males = map_dbl(years_exp, wage_males),
Females = map_dbl(years_exp, wage_females))
# make one column for gender
wage_data %<>% gather(Males, Females, key = Gender, value = Salary)
# plot
ggplot(wage_data) +
geom_line(aes(Year_Exp, Salary, color = Gender)) +
ggtitle("Comparison of Female vs Male Salaries by Years of Experience") +
xlab("Years of Experience")
library(ggplot2)
library(purrr)
library(tidyr)
library(magrittr)
# define range for X2
years_exp = c(0:20)
# regression line for males
wage_males <- function(m) {(35.11+1.93568) + (1.23550 + .25841)*m}
# regression line for females
wage_females <- function(f) {35.11 + (1.23550 + .25841)*f}
# data frame containing these values
wage_data = data.frame(Year_Exp = years_exp,
Males = map_dbl(years_exp, wage_males),
Females = map_dbl(years_exp, wage_females))
# make one column for gender
wage_data %<>% gather(Males, Females, key = Gender, value = Salary)
# plot
ggplot(wage_data) +
geom_line(aes(Year_Exp, Salary, color = Gender)) +
ggtitle("Comparison of Female vs Male Salaries by Years of Experience") +
xlab("Years of Experience") +
ylab("Salary (1000s of $")
library(ggplot2)
library(purrr)
library(tidyr)
library(magrittr)
# define range for X2
years_exp = c(0:20)
# regression line for males
wage_males <- function(m) {(35.11+1.93568) + (1.23550 + .25841)*m}
# regression line for females
wage_females <- function(f) {35.11 + (1.23550 + .25841)*f}
# data frame containing these values
wage_data = data.frame(Year_Exp = years_exp,
Males = map_dbl(years_exp, wage_males),
Females = map_dbl(years_exp, wage_females))
# make one column for gender
wage_data %<>% gather(Males, Females, key = Gender, value = Salary)
# plot
ggplot(wage_data) +
geom_line(aes(Year_Exp, Salary, color = Gender)) +
ggtitle("Comparison of Female vs Male Salaries by Years of Experience") +
xlab("Years of Experience") +
ylab("Salary (1000s of $)")
library(ggplot2)
library(purrr)
library(tidyr)
library(magrittr)
# define range for X2 (years of experience)
years_exp = c(0:20)
# regression line for males
wage_males <- function(m) {(35.11+1.93568) + (1.23550 + .25841)*m}
# regression line for females
wage_females <- function(f) {35.11 + (1.23550)*f}
# data frame containing these values
wage_data = data.frame(Year_Exp = years_exp,
Males = map_dbl(years_exp, wage_males),
Females = map_dbl(years_exp, wage_females))
# make one column for gender
wage_data %<>% gather(Males, Females, key = Gender, value = Salary)
# plot
ggplot(wage_data) +
geom_line(aes(Year_Exp, Salary, color = Gender)) +
ggtitle("Comparison of Female vs Male Salaries by Years of Experience") +
xlab("Years of Experience") +
ylab("Salary (1000s of $)")
library(ggplot2)
library(purrr)
library(tidyr)
library(magrittr)
# define range for X2 (years of experience)
years_exp = c(0:20)
# regression line for males
wage_males <- function(m) {(35.11+1.93568) + (1.23550 + .25841)*m}
# regression line for females
wage_females <- function(f) {35.11 + (1.23550)*f}
# data frame containing these values
wage_data = data.frame(Year_Exp = years_exp,
Male = map_dbl(years_exp, wage_males),
Female = map_dbl(years_exp, wage_females))
# make one column for gender
wage_data %<>% gather(Males, Females, key = Gender, value = Salary)
# plot
ggplot(wage_data) +
geom_line(aes(Year_Exp, Salary, color = Gender)) +
ggtitle("Comparison of Female vs Male Salaries by Years of Experience") +
xlab("Years of Experience") +
ylab("Salary (1000s of $)")
library(ggplot2)
library(purrr)
library(tidyr)
library(magrittr)
# define range for X2 (years of experience)
years_exp = c(0:20)
# regression line for males
wage_males <- function(m) {(35.11+1.93568) + (1.23550 + .25841)*m}
# regression line for females
wage_females <- function(f) {35.11 + (1.23550)*f}
# data frame containing these values
wage_data = data.frame(Year_Exp = years_exp,
Male = map_dbl(years_exp, wage_males),
Female = map_dbl(years_exp, wage_females))
# make one column for gender
wage_data %<>% gather(Male, Female, key = Gender, value = Salary)
# plot
ggplot(wage_data) +
geom_line(aes(Year_Exp, Salary, color = Gender)) +
ggtitle("Comparison of Female vs Male Salaries by Years of Experience") +
xlab("Years of Experience") +
ylab("Salary (1000s of $)")
anorexic <- read.csv("~/Desktop/DataScience@SMU/StatFoundations/AnorexicWeights.csv")
View(anorexic)
colnames(anorexic) <- c("trt", "PreWgt", "PostWgt", "Behavioral?", "Family?")
str(anorexic)
anorexic[, c(4,5)] %<>% as.factor()
str(anorexic)
library(magrittr)
library(ggplot2)
anorexic <- read.csv("~/Desktop/DataScience@SMU/StatFoundations/AnorexicWeights.csv")
colnames(anorexic) <- c("trt", "PreWgt", "PostWgt", "Behavioral?", "Family?")
str(anorexic)
anorexic[, c(4,5)] <- as.factor(c(anorexic$`Behavioral?`, anorexic$`Family?`))
str(anorexic)
library(magrittr)
library(ggplot2)
anorexic <- read.csv("~/Desktop/DataScience@SMU/StatFoundations/AnorexicWeights.csv")
colnames(anorexic) <- c("trt", "PreWgt", "PostWgt", "Behavioral?", "Family?")
anorexic$`Behavioral?` <- as.factor(anorexic$`Behavioral?`)
str(anorexic)
library(magrittr)
library(ggplot2)
anorexic <- read.csv("~/Desktop/DataScience@SMU/StatFoundations/AnorexicWeights.csv")
colnames(anorexic) <- c("trt", "PreWgt", "PostWgt", "Behavioral?", "Family?")
anorexic[, c(4,5)] <- lapply(anorexic[, c(4,5)], factor)
str(anorexic)
View(anorexic)
ggplot(anorexic) + geom_point(aes(PreWgt, PostWgt), fill = trt)
ggplot(anorexic) + geom_point(aes(PreWgt, PostWgt, color = trt))
anorexic.lm1 <- lm(PostWgt ~ Behavioral? + Family?, data = anorexic)
anorexic.lm1 <- lm(PostWgt ~ `Behavioral?` + `Family?`, data = anorexic)
summary(anorexic.lm1)
anorexic.lm2 <- lm(PostWgt ~ PreWgt, data = anorexic)
summary(anorexic.lm2)
summary(anorexic.lm1)
anorexic.lm3 <- lm(PostWgt ~ `Behavioral?` + `Family?` + PreWgt, data = anorexic)
summary(anorexic.lm3)
anorexic.lm1 <- lm(PostWgt ~ `Behavioral?` + `Family?`, data = anorexic)
summary(anorexic.lm1)
anorexic %>% filter(`Behavioral?` == 1) %>% summarise(mean(PostWgt))
81.108 + 4.714
anorexic %>% filter(`Family?` == 1) %>% summarise(mean(PostWgt))
81.108 + 9.386
map_chr(dbListTables(con), function(t) {paste(c(t, "_db"), collapse = "")}
map_chr(dbListTables(con), function(t) {paste(c(t, "_db"), collapse = ""))}
map_chr(dbListTables(con), function(t) {paste(c(t, "_db"), collapse = "")})
table_names <- map_chr(dbListTables(con), function(t) {paste(c(t, "_db"), collapse = "")})
table_names
table_names[1]
table_names[1] < 2
table_names[1] <- 2
table_names[1]
table_names <- map_chr(dbListTables(con), function(t) {paste(c(t, "_db"), collapse = "")})
table_names[1]
